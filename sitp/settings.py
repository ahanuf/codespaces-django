"""
Django settings for sitp project.

Generated by 'django-admin startproject' using Django 5.1.7.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

import os
from pathlib import Path
from decouple import config

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-)1zl4w_j!axw8v!d$4-g&!z3&$cqh!a&!-f987=3gtm)l%axbu"
# SECRET_KEY = config("SECRET_KEY", default="")
# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True
# DEBUG = config("DEBUG", default=True)
ALLOWED_HOSTS = config("ALLOWED_HOSTS", default="").split(",") # type: ignore


if "CODESPACE_NAME" in os.environ:
    codespace_name = config("CODESPACE_NAME")
    codespace_domain = config("GITHUB_CODESPACES_PORT_FORWARDING_DOMAIN")
    CSRF_TRUSTED_ORIGINS = [f"https://{codespace_name}-8000.{codespace_domain}"]

# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "apps",
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "django_ckeditor_5",
    "taggit",
    "widget_tweaks",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "whitenoise.middleware.WhiteNoiseMiddleware",
    "allauth.account.middleware.AccountMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

X_FRAME_OPTIONS = "ALLOW-FROM preview.app.github.dev"
ROOT_URLCONF = "sitp.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [BASE_DIR / "templates"],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                'django.template.context_processors.media',
                'django.template.context_processors.static',
                'django.template.context_processors.tz',
                "django.contrib.messages.context_processors.messages",
                "apps.views.categories"
            ],
        },
    },
]

WSGI_APPLICATION = "sitp.wsgi.application"


# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": BASE_DIR / "db.sqlite3",
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTHENTICATION_BACKEND = (
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
)

SITE_ID = 1
ACCOUNT_EMAIL_VERIFICATION = "none"
ACCOUNT_LOGIN_METHODS = {"username", "email"}  # allows login with either

ACCOUNT_EMAIL_REQUIRED = False

# Instead of hard-coding the redirect URL without the username,
# point to the custom login redirect URL.
LOGIN_REDIRECT_URL = "/accounts/login-redirect/"
ACCOUNT_LOGIN_REDIRECT_URL = "/accounts/login-redirect/"
ACCOUNT_SIGNUP_REDIRECT_URL = "/accounts/login-redirect/"

EMAIL_BACKEND = "django.core.mail.backends.console.EmailBackend"


AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.1/howto/static-files/


STATICFILES_DIRS = [
    BASE_DIR / "static",
]

STATIC_URL = "static/"
STATIC_ROOT = BASE_DIR / "statics"

CKEDITOR_UPLOAD_PATH = "uploads/"

MEDIA_URL = "media/"
MEDIA_ROOT = BASE_DIR / "media"

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"



customColorPalette = [
    {
        "color": "hsl(0, 75%, 60%)",
        "label": "Red",
    },
    {
        "color": "hsl(30, 75%, 60%)",
        "label": "Orange",
    },
    {
        "color": "hsl(60, 75%, 60%)",
        "label": "Yellow",
    },
    {
        "color": "hsl(120, 75%, 60%)",
        "label": "Green",
    },
    {
        "color": "hsl(180, 75%, 60%)",
        "label": "Cyan",
    },
    {
        "color": "hsl(240, 75%, 60%)",
        "label": "Blue",
    },
]

CKEDITOR_5_CONFIGS = {
    "default": {
        "language": {"ui": "en", "content": "en"},
        "toolbar": {
            "items": [
                "undo", "redo", "|",
                "heading", "|",
                "bold", "italic", "underline", "strikethrough", "highlight", "|",
                "subscript", "superscript", "removeFormat", "|",
                "fontSize", "fontFamily", "fontColor", "fontBackgroundColor", "|",
                "alignment", "|",
                "bulletedList", "numberedList", "todoList", "|",
                "outdent", "indent", "blockQuote", "horizontalLine", "|",
                "code", "codeBlock", "htmlEmbed", "sourceEditing", "|",
                "link", "insertImage", "mediaEmbed", "fileUpload", "|",
                "insertTable", "findAndReplace", "specialCharacters", "selectAll", "|",
                "showBlocks", "style", "pageBreak",
            ],
            "shouldNotGroupWhenFull": True,
        },
        "image": {
            "toolbar": [
                "imageTextAlternative", "|",
                "imageStyle:block", "imageStyle:side",
                "imageStyle:alignLeft", "imageStyle:alignCenter", "imageStyle:alignRight", "|",
                "resizeImage:50", "resizeImage:75", "resizeImage:100",
            ],
            "resizeUnit": "px",
            "styles": ["full", "side", "alignLeft", "alignCenter", "alignRight"],
        },
        "table": {
            "contentToolbar": [
                "tableColumn", "tableRow", "mergeTableCells",
                "tableProperties", "tableCellProperties", "toggleTableCaption",
            ],
            "tableProperties": {
                "borderColors": customColorPalette,
                "backgroundColors": customColorPalette,
            },
            "tableCellProperties": {
                "borderColors": customColorPalette,
                "backgroundColors": customColorPalette,
            },
        },
        "heading": {
            "options": [
                {"model": "paragraph", "title": "Paragraph", "class": "ck-heading_paragraph"},
                {"model": "heading1", "view": "h1", "title": "Heading 1", "class": "ck-heading_heading1"},
                {"model": "heading2", "view": "h2", "title": "Heading 2", "class": "ck-heading_heading2"},
                {"model": "heading3", "view": "h3", "title": "Heading 3", "class": "ck-heading_heading3"},
                {"model": "heading4", "view": "h4", "title": "Heading 4", "class": "ck-heading_heading4"},
                {"model": "heading5", "view": "h5", "title": "Heading 5", "class": "ck-heading_heading5"},
                {"model": "heading6", "view": "h6", "title": "Heading 6", "class": "ck-heading_heading6"},
            ],
        },
        "list": {
            "properties": {
                "styles": True,
                "startIndex": True,
                "reversed": True,
            },
        },
        "link": {
            "defaultProtocol": "https://",
        },
        "htmlSupport": {
            "allow": [
                {"name": "/.*/", "attributes": True, "classes": True, "styles": True},
            ],
        },
        "style": {
            "definitions": [
                {"name": "Article Category", "element": "h3", "classes": ["category"]},
                {"name": "Info Box", "element": "p", "classes": ["info-box"]},
                {"name": "Important Text", "element": "p", "classes": ["important-text"]},
                {"name": "Note", "element": "div", "classes": ["note"]},
            ],
        },
    }
}


