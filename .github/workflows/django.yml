name: Django CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      max-parallel: 4
      matrix:
        python-version: [3.7, 3.8, 3.9]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: test_db
        ports:
          - 5432:5432
        options: >-
          --health-cmd "pg_isready -U postgres"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      # Django will pick this up automatically in many setups,
      # or you can parse it in settings.py via dj‐database‐url.
      DATABASE_URL: postgres://postgres:postgres@localhost:5432/test_db
      DJANGO_SETTINGS_MODULE: myproject.settings
      PYTHONUNBUFFERED: 1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v3
        with:
          python-version: ${{ matrix.python-version }}

      - name: Cache pip
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ runner.os }}-pip-${{ matrix.python-version }}-${{ hashFiles('**/requirements.txt') }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          # Optional: install dev requirements if you have a separate file
          # pip install -r dev-requirements.txt

      - name: Django system check & migrations dry‑run
        run: |
          python manage.py check --deploy
          python manage.py makemigrations --dry-run --check

      - name: Apply migrations
        run: python manage.py migrate --no-input

      - name: Run test suite
        run: |
          # you can add --verbosity=2 or coverage here
          python manage.py test

      - name: Lint with flake8
        run: |
          pip install flake8
          flake8 .

      - name: Security scan with bandit
        run: |
          pip install bandit
          bandit -r .

      - name: Upload test coverage report
        if: ${{ always() }}
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: htmlcov/
